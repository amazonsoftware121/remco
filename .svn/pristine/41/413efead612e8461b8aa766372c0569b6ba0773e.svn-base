import { Component, HostListener, Inject, OnInit } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { ActivatedRoute } from '@angular/router';
import { OwlOptions } from 'ngx-owl-carousel-o';
import { AlertService } from 'src/app/providers/alertService';
import { LoaderService } from 'src/app/providers/loader.service';
import { WebService } from 'src/app/providers/web.serivce';
import { environment } from 'src/environments/environment';

@Component({
  selector: 'app-campaign-lightbox-view-form',
  templateUrl: './campaign-lightbox-view-form.component.html',
  styleUrls: ['./campaign-lightbox-view-form.component.scss']
})
export class CampaignLightboxViewFormComponent implements OnInit {

  value;

  view:any

  contactUsForm: any;
  
  base_url:string = environment.base_url;
  
  projects = [
    {
      id: '1',
      image: 'background3.jpg'
    },
    {
      id: '2',
      image: 'background3.jpg'
    },
    {
      id: '3',
      image: 'background4.jpg'
    }
  ]

  testimonialOptions: OwlOptions = {
    loop: true,
    mouseDrag: false,
    touchDrag: true,
    pullDrag: false,
    dots: true,
    autoplay:true,
    autoplayTimeout:1800,
    navText: ['', ''],
    responsive: {
      0: {
        items: 1
      },
      400: {
        items: 1
      }
    },
  }

  constructor(private dialog: MatDialogRef<CampaignLightboxViewFormComponent>,
    @Inject(MAT_DIALOG_DATA) public data:any
  )
  { this.value = data,console.log('------------->-----',this.value);}

  @HostListener('document:keyup.escape') onClose() {
    this.close();
  }

  submit() {
    this.dialog.close(true);
  }

  close() {
    this.dialog.close();
  }

  ngOnInit(): void { 
    this.contactUsForm.clearValidators();
    this.buildcontactUsForm();
  }
  markasuntouched(){
    this.buildcontactUsForm();
  }

  buildcontactUsForm() {
    this.contactUsForm = new FormGroup({
      name: new FormControl('', [Validators.required]),
      email: new FormControl('', [Validators.required, Validators.pattern(
        /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i
      ),]),
      message: new FormControl('', [Validators.required])
    });
  }


}
